services:
  db:
    image: postgres:15-alpine
    container_name: ihys_postgres
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5454:5432"
    env_file:
      - ./.env.db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    container_name: ihys_backend
    build:
      context: ./backend
      # Use DOCKER_TARGET env var to switch between 'dev' and 'prod' stages
      # Defaults to 'dev' if not set
      target: ${DOCKER_TARGET:-dev}
    restart: unless-stopped
    ports:
      - "8002:8000"
    volumes:
      - ./backend:/app
    env_file:
      - ./.env.backend
    depends_on:
      db:
        condition: service_healthy

  frontend:
    container_name: ihys_frontend
    build:
      context: ./frontend
      target: ${DOCKER_TARGET:-dev}
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.nuxt
    env_file:
      - ./.env.frontend
    environment:
      - NUXT_HOST=0.0.0.0
    depends_on:
      - backend

volumes:
  postgres-data:
